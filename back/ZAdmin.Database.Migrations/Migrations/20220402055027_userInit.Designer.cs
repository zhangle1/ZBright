// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZAdmin.EntityFramework.Core;

#nullable disable

namespace ZAdmin.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20220402055027_userInit")]
    partial class userInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ZAdmin.Core.Entity.SysApp", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id主键");

                    b.Property<string>("Active")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasComment("是否默认激活");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("编码");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("创建者名称");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<long?>("UpdatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改者Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("修改者名称");

                    b.HasKey("Id");

                    b.ToTable("sys_app");

                    b.HasComment("系统应用表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysMenu", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id主键");

                    b.Property<string>("Application")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("应用分类");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("编码");

                    b.Property<string>("Component")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("组件地址");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("创建者名称");

                    b.Property<string>("Icon")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("图标");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("Link")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("内链地址");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("名称");

                    b.Property<int>("OpenType")
                        .HasColumnType("int")
                        .HasComment("打开方式");

                    b.Property<string>("Permission")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("权限标识");

                    b.Property<long>("Pid")
                        .HasColumnType("bigint")
                        .HasComment("父Id");

                    b.Property<string>("Pids")
                        .HasColumnType("longtext")
                        .HasComment("父Ids");

                    b.Property<string>("Redirect")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("重定向地址");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("备注");

                    b.Property<string>("Router")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("路由地址");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("菜单类型");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<long?>("UpdatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改者Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("修改者名称");

                    b.Property<string>("Visible")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasComment("是否可见");

                    b.Property<int>("Weight")
                        .HasColumnType("int")
                        .HasComment("权重");

                    b.HasKey("Id");

                    b.ToTable("sys_menu");

                    b.HasComment("菜单表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysOrg", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("编码");

                    b.Property<string>("Contacts")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("联系人");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("创建者名称");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("名称");

                    b.Property<string>("OrgType")
                        .HasColumnType("longtext");

                    b.Property<long>("Pid")
                        .HasColumnType("bigint")
                        .HasComment("父Id");

                    b.Property<string>("Pids")
                        .HasColumnType("longtext")
                        .HasComment("父Ids");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("备注");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("电话");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<long?>("UpdatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改者Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("修改者名称");

                    b.HasKey("Id");

                    b.ToTable("sys_org");

                    b.HasComment("组织机构表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("编码");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("创建者名称");

                    b.Property<int>("DataScopeType")
                        .HasColumnType("int")
                        .HasComment("数据范围类型");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("备注");

                    b.Property<int>("RoleType")
                        .HasColumnType("int")
                        .HasComment("角色类型-集团角色_0、加盟商角色_1、门店角色_2");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<long?>("UpdatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改者Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("修改者名称");

                    b.HasKey("Id");

                    b.ToTable("sys_role");

                    b.HasComment("角色表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRoleDataScope", b =>
                {
                    b.Property<long>("SysRoleId")
                        .HasColumnType("bigint")
                        .HasComment("角色Id");

                    b.Property<long>("SysOrgId")
                        .HasColumnType("bigint")
                        .HasComment("机构Id");

                    b.HasKey("SysRoleId", "SysOrgId");

                    b.HasIndex("SysOrgId");

                    b.ToTable("sys_role_data_scope");

                    b.HasComment("角色数据范围表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRoleMenu", b =>
                {
                    b.Property<long>("SysRoleId")
                        .HasColumnType("bigint")
                        .HasComment("角色Id");

                    b.Property<long>("SysMenuId")
                        .HasColumnType("bigint")
                        .HasComment("菜单Id");

                    b.HasKey("SysRoleId", "SysMenuId");

                    b.HasIndex("SysMenuId");

                    b.ToTable("sys_role_menu");

                    b.HasComment("角色菜单表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id主键");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("账号");

                    b.Property<int>("AdminType")
                        .HasColumnType("int")
                        .HasComment("管理员类型-超级管理员_1、管理员_2、普通账号_3");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext")
                        .HasComment("头像");

                    b.Property<DateTimeOffset?>("Birthday")
                        .HasColumnType("datetime(6)")
                        .HasComment("生日");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建者Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("创建者名称");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("邮箱");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("LastLoginIp")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("最后登录IP");

                    b.Property<DateTimeOffset?>("LastLoginTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后登录时间");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("姓名");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("昵称");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("手机");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasComment("性别-男_1、女_2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态-正常_0、停用_1、删除_2");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("电话");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<long?>("UpdatedUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改者Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("修改者名称");

                    b.HasKey("Id");

                    b.ToTable("sys_user");

                    b.HasComment("用户表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUserDataScope", b =>
                {
                    b.Property<long>("SysUserId")
                        .HasColumnType("bigint")
                        .HasComment("用户Id");

                    b.Property<long>("SysOrgId")
                        .HasColumnType("bigint")
                        .HasComment("机构Id");

                    b.HasKey("SysUserId", "SysOrgId");

                    b.HasIndex("SysOrgId");

                    b.ToTable("sys_user_data_scope");

                    b.HasComment("用户数据范围表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUserRole", b =>
                {
                    b.Property<long>("SysUserId")
                        .HasColumnType("bigint")
                        .HasComment("用户Id");

                    b.Property<long>("SysRoleId")
                        .HasColumnType("bigint")
                        .HasComment("角色Id");

                    b.HasKey("SysUserId", "SysRoleId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("sys_user_role");

                    b.HasComment("用户角色表");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRoleDataScope", b =>
                {
                    b.HasOne("ZAdmin.Core.Entity.SysOrg", "SysOrg")
                        .WithMany("SysRoleDataScopes")
                        .HasForeignKey("SysOrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZAdmin.Core.Entity.SysRole", "SysRole")
                        .WithMany("SysRoleDataScopes")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysOrg");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRoleMenu", b =>
                {
                    b.HasOne("ZAdmin.Core.Entity.SysMenu", "SysMenu")
                        .WithMany("SysRoleMenus")
                        .HasForeignKey("SysMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZAdmin.Core.Entity.SysRole", "SysRole")
                        .WithMany("SysRoleMenus")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysMenu");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUserDataScope", b =>
                {
                    b.HasOne("ZAdmin.Core.Entity.SysOrg", "SysOrg")
                        .WithMany("SysUserDataScopes")
                        .HasForeignKey("SysOrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZAdmin.Core.Entity.SysUser", "SysUser")
                        .WithMany("SysUserDataScopes")
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysOrg");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUserRole", b =>
                {
                    b.HasOne("ZAdmin.Core.Entity.SysRole", "SysRole")
                        .WithMany("SysUserRoles")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZAdmin.Core.Entity.SysUser", "SysUser")
                        .WithMany("SysUserRoles")
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysRole");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysMenu", b =>
                {
                    b.Navigation("SysRoleMenus");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysOrg", b =>
                {
                    b.Navigation("SysRoleDataScopes");

                    b.Navigation("SysUserDataScopes");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysRole", b =>
                {
                    b.Navigation("SysRoleDataScopes");

                    b.Navigation("SysRoleMenus");

                    b.Navigation("SysUserRoles");
                });

            modelBuilder.Entity("ZAdmin.Core.Entity.SysUser", b =>
                {
                    b.Navigation("SysUserDataScopes");

                    b.Navigation("SysUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
